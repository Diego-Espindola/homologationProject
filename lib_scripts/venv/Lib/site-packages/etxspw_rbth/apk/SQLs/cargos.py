def sql_cargo_tce(execucaoPrincipal):
    """Funcao que retorna o SQL de homologação cargos tce"""

    sql = f"""
        SELECT 
            CASE
                WHEN SUBSTRING(REPLACE(cc.codigo_tce, ' ', ''), 0, 2) <> cc.i_entidades || '-' THEN cc.i_entidades || '-' || cc.codigo_tce
                ELSE REPLACE(cc.codigo_tce, ' ', '')
            END AS codigo_tce,
            cc.i_cargos as codigo_cargo,
            bethadba.dbf_get_id_gerado(300, 'cargo', cc.i_entidades, cc.i_cargos) as id_cargo,
            CAST(mc.dt_vigorar AS VARCHAR(255)) AS data_a_vigorar 
        FROM bethadba.cargos_compl cc 
        JOIN bethadba.mov_cargos mc ON (mc.i_entidades = cc.i_entidades AND mc.i_cargos = cc.i_cargos)
        WHERE cc.codigo_tce IS NOT NULL
            AND mc.tipo_atualiz = 1 -- 1 - criação do cargo
            AND cc.i_cargos NOT IN (
                SELECT i_cargos 
                FROM bethadba.mov_cargos mc 
                WHERE tipo_atualiz = 3
            ) -- 3 - cargo extinto
            AND cc.i_cargos NOT IN (
                SELECT i_cargos 
                FROM bethadba.cargos c
                JOIN bethadba.tipos_cargos tc ON (c.i_tipos_cargos = tc.i_tipos_cargos)
                JOIN bethadba.tipos_cargos_prop_adic tcpa ON (tc.i_tipos_cargos = tcpa.i_tipos_cargos)
                WHERE tcpa.i_caracteristicas = 20250
                    AND tcpa.valor_caracter = 0
            ) -- 0 - é o valor 'outros' no campo adicional 'tipo de cargo' do tipo de cargo
            AND mc.dt_vigorar IS NOT NULL
            AND cc.i_entidades in ({execucaoPrincipal.entidades})
            AND id_cargo IS NOT NULL
        """
    return sql
